{"version":3,"sources":["components/ModalWindow/ModalWindow.jsx","components/ScoreBoard/ScoreBoard.jsx","components/TicTacToe/TicTacToe.jsx","App.jsx","index.jsx"],"names":["ModalWindow","state","firstPlayerName","secondPlayerName","updateName","event","target","name","value","setState","addNames","this","props","className","onSubmit","preventDefault","type","placeholder","onChange","onClick","React","PureComponent","ScoreBoard","firstPlayerWins","secondPlayerWins","TicTacToe","field","Array","fill","count","clickCell","position","updatedField","isWinner","winningCombinations","player","i","line","updateScore","clearBoard","includes","alert","prevProps","prevState","setTimeout","map","cell","key","uuidv4","App","playerCount","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.130360b0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ModalWindow.scss';\n\nexport class ModalWindow extends React.PureComponent {\n  state = {\n    firstPlayerName: '',\n    secondPlayerName: '',\n  };\n\n  updateName = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { addNames } = this.props;\n\n    const {\n      firstPlayerName,\n      secondPlayerName,\n    } = this.state;\n\n    return (\n      <div className=\"modalContainer\">\n        <div className=\"modalWindow window\">\n          <form\n            className=\"enter-nicknames-form\"\n            onSubmit={(event) => {\n              event.preventDefault();\n            }}\n          >\n            <div className=\"enter-nicknames-form__title\">\n              Please, enter nicknames\n            </div>\n            <input\n              type=\"text\"\n              name=\"firstPlayerName\"\n              className=\"enter-nicknames-form__first-player-name\"\n              placeholder=\"Enter first player name\"\n              value={firstPlayerName}\n              onChange={this.updateName}\n            />\n            <input\n              type=\"text\"\n              name=\"secondPlayerName\"\n              className=\"enter-nicknames-form__second-player-name\"\n              placeholder=\"Enter second player name\"\n              value={secondPlayerName}\n              onChange={this.updateName}\n            />\n            <button\n              type=\"submit\"\n              className=\"enter-nicknames-form__submit-button\"\n              onClick={() => addNames(firstPlayerName, secondPlayerName)}\n            >\n              Add names\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nModalWindow.propTypes = {\n  addNames: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './ScoreBoard.scss';\nimport PropTypes from 'prop-types';\n\nexport const ScoreBoard = ({\n  firstPlayerName,\n  secondPlayerName,\n  firstPlayerWins,\n  secondPlayerWins,\n}) => {\n  return (\n    <div className=\"score\">\n      <div className=\"score__title\">\n        Score:\n      </div>\n      <div className=\"score__first-player\">\n        {`${firstPlayerName}: ${firstPlayerWins}`}\n      </div>\n      <div className=\"score__second-player\">\n        {`${secondPlayerName}: ${secondPlayerWins}`}\n      </div>\n    </div>\n  );\n};\n\nScoreBoard.propTypes = {\n  firstPlayerName: PropTypes.string.isRequired,\n  firstPlayerWins: PropTypes.number.isRequired,\n  secondPlayerName: PropTypes.string.isRequired,\n  secondPlayerWins: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TicTacToe.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport class TicTacToe extends React.PureComponent {\n  state = {\n    field: Array(9).fill(null),\n    count: 0,\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.field !== this.state.field) {\n      setTimeout(() => (this.isWinner()), 0);\n    }\n  }\n\n  clickCell = (event) => {\n    const { name: position } = event.target;\n    const { field, count } = this.state;\n\n    const updatedField = [...field];\n\n    if (updatedField[position] === null) {\n      updatedField[position] = (count % 2 === 0 ? 'X' : 'O');\n\n      this.setState((state) => {\n        return {\n          count: state.count + 1,\n          field: updatedField,\n        };\n      });\n    }\n  }\n\n  isWinner = () => {\n    const { field, count } = this.state;\n\n    const winningCombinations = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    const player = (count % 2 === 0 ? 'O' : 'X');\n\n    for (let i = 0; i < 8; i += 1) {\n      const line = winningCombinations[i];\n\n      if (field[line[0]] === player\n        && field[line[1]] === player\n        && field[line[2]] === player) {\n        this.props.updateScore(player);\n\n        this.clearBoard();\n\n        return;\n      }\n    }\n\n    if (!field.includes(null)) {\n      alert('Draw');\n      this.clearBoard();\n    }\n  }\n\n  clearBoard = () => {\n    this.setState({\n      field: Array(9).fill(null),\n      count: 0,\n    });\n  }\n\n  render() {\n    const {\n      field,\n    } = this.state;\n\n    return (\n      <div className=\"tic-tac-toe\">\n        {field.map((cell, i) => {\n          return (\n            <button\n              type=\"button\"\n              className=\"tic-tac-toe__cell\"\n              name={i}\n              onClick={this.clickCell}\n              key={uuidv4()}\n            >\n              {field[i]}\n            </button>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nTicTacToe.propTypes = {\n  updateScore: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { ModalWindow } from './components/ModalWindow';\nimport { ScoreBoard } from './components/ScoreBoard/ScoreBoard';\nimport { TicTacToe } from './components/TicTacToe';\n\nexport class App extends React.PureComponent {\n  state = {\n    firstPlayerName: '',\n    secondPlayerName: '',\n    firstPlayerWins: 0,\n    secondPlayerWins: 0,\n  };\n\n  addNames = (firstPlayerName, secondPlayerName) => {\n    this.setState({\n      firstPlayerName,\n      secondPlayerName,\n    });\n  }\n\n  updateScore = (player) => {\n    const {\n      firstPlayerName,\n      secondPlayerName,\n    } = this.state;\n\n    const playerName = (player === 'X')\n      ? firstPlayerName\n      : secondPlayerName;\n\n    const playerCount = (player === 'X')\n      ? 'firstPlayerWins'\n      : 'secondPlayerWins';\n\n    alert(`${playerName} won!`);\n\n    this.setState(state => ({\n      [playerCount]: state[playerCount] + 1,\n    }));\n  }\n\n  render() {\n    const {\n      firstPlayerName,\n      secondPlayerName,\n      firstPlayerWins,\n      secondPlayerWins,\n    } = this.state;\n\n    return (\n      <div className=\"section\">\n        {\n          (!firstPlayerName || !secondPlayerName)\n          && <ModalWindow addNames={this.addNames} />\n        }\n\n        <TicTacToe\n          updateScore={this.updateScore}\n        />\n\n        <ScoreBoard\n          firstPlayerName={firstPlayerName}\n          secondPlayerName={secondPlayerName}\n          firstPlayerWins={firstPlayerWins}\n          secondPlayerWins={secondPlayerWins}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}